//Package and import declerations
import java_cup.runtime.*;




//User code components (Linking with the lexer)

// parser code {:
//     // Connect this parser to a scanner!
//     scanner s;
//     Parser(scanner s){ this.s=s; }
// :}

//  define how to connect to the scanner! 
// init with {: s.init(); :};
// scan with {: return s.next_token(); :};




//Symbols (Terminal and non-terminal lists)

terminal SEMI, COLON, PLUS,  MINUS, TIMES, DIVIDE, LPAREN, RPAREN, CHAR, IDENTIFIER, BOOL, INT, FLOAT, RAT, DICT, SEQ, TDEF, IF, LOOP, FI, POOL, TOP, LCURL, RCURL, ASSIGN_EQUAL, PUNC

non-terminal expr



//Precedence declaration

precedence left PLUS, MINUS;



//Grammar (context-free)

number ::= FLOAT | RAT | INT

data ::=

dataType ::=

declaration ::= IDENTIFIER COLON dataType //define datatype

decleration_assignment ::= declaration ASSIGN_EQUAL DATA //define data

typeDefinition ::= TDEF IDENTIFIER LCURL objectArray RCURL

objectArray ::= IDENTIFIER COLON dataType PUNC objectArray | IDENTIFIER COLON dataType

expr  ::= expr:e1 PLUS expr:e2    
	      |
	      expr:e1 MINUS expr:e2    
	      | 
          expr:e1 TIMES expr:e2 
	      | 
	      expr:e1 DIVIDE expr:e2 
	      | 
          expr:e1 MOD expr:e2 
	      | 
          NUMBER:n                  
	      | 
          MINUS expr:e             
	      | 
          LPAREN expr:e RPAREN     



